#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace server.db
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="vdt_vnm")]
	public partial class dcDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttbOrder(tbOrder instance);
    partial void UpdatetbOrder(tbOrder instance);
    partial void DeletetbOrder(tbOrder instance);
    partial void InserttbUser(tbUser instance);
    partial void UpdatetbUser(tbUser instance);
    partial void DeletetbUser(tbUser instance);
    partial void InserttbTransaction(tbTransaction instance);
    partial void UpdatetbTransaction(tbTransaction instance);
    partial void DeletetbTransaction(tbTransaction instance);
    #endregion
		
		public dcDataContext() : 
				base(global::server.Properties.Settings.Default.vdt_vnmConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dcDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dcDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dcDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dcDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbOrder> tbOrders
		{
			get
			{
				return this.GetTable<tbOrder>();
			}
		}
		
		public System.Data.Linq.Table<tbUser> tbUsers
		{
			get
			{
				return this.GetTable<tbUser>();
			}
		}
		
		public System.Data.Linq.Table<tbTransaction> tbTransactions
		{
			get
			{
				return this.GetTable<tbTransaction>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbOrder")]
	public partial class tbOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _uid;
		
		private System.DateTime _createDate;
		
		private string _orderType;
		
		private double _amount;
		
		private string _data;
		
		private string _status;
		
		private System.Nullable<System.Guid> _ref_id;
		
		private EntityRef<tbUser> _tbUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnuidChanging(string value);
    partial void OnuidChanged();
    partial void OncreateDateChanging(System.DateTime value);
    partial void OncreateDateChanged();
    partial void OnorderTypeChanging(string value);
    partial void OnorderTypeChanged();
    partial void OnamountChanging(double value);
    partial void OnamountChanged();
    partial void OndataChanging(string value);
    partial void OndataChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onref_idChanging(System.Nullable<System.Guid> value);
    partial void Onref_idChanged();
    #endregion
		
		public tbOrder()
		{
			this._tbUser = default(EntityRef<tbUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="VarChar(50)")]
		public string uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					if (this._tbUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime NOT NULL")]
		public System.DateTime createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string orderType
		{
			get
			{
				return this._orderType;
			}
			set
			{
				if ((this._orderType != value))
				{
					this.OnorderTypeChanging(value);
					this.SendPropertyChanging();
					this._orderType = value;
					this.SendPropertyChanged("orderType");
					this.OnorderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Float NOT NULL")]
		public double amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="NVarChar(1000)")]
		public string data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ref_id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ref_id
		{
			get
			{
				return this._ref_id;
			}
			set
			{
				if ((this._ref_id != value))
				{
					this.Onref_idChanging(value);
					this.SendPropertyChanging();
					this._ref_id = value;
					this.SendPropertyChanged("ref_id");
					this.Onref_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbOrder", Storage="_tbUser", ThisKey="uid", OtherKey="id", IsForeignKey=true)]
		public tbUser tbUser
		{
			get
			{
				return this._tbUser.Entity;
			}
			set
			{
				tbUser previousValue = this._tbUser.Entity;
				if (((previousValue != value) 
							|| (this._tbUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbUser.Entity = null;
						previousValue.tbOrders.Remove(this);
					}
					this._tbUser.Entity = value;
					if ((value != null))
					{
						value.tbOrders.Add(this);
						this._uid = value.id;
					}
					else
					{
						this._uid = default(string);
					}
					this.SendPropertyChanged("tbUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbUser")]
	public partial class tbUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private System.DateTime _createDate;
		
		private string _caption;
		
		private System.Nullable<long> _tele_id;
		
		private string _desciption;
		
		private double _money;
		
		private string _status;
		
		private int _secretnum12;
		
		private int _secretnum11;
		
		private int _secretnum10;
		
		private int _secretnum9;
		
		private int _secretnum8;
		
		private int _secretnum7;
		
		private int _secretnum6;
		
		private int _secretnum5;
		
		private int _secretnum4;
		
		private int _secretnum3;
		
		private int _secretnum2;
		
		private int _secretnum1;
		
		private EntitySet<tbOrder> _tbOrders;
		
		private EntitySet<tbTransaction> _tbTransactions;
		
		private EntitySet<tbTransaction> _tbTransactions1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OncreateDateChanging(System.DateTime value);
    partial void OncreateDateChanged();
    partial void OncaptionChanging(string value);
    partial void OncaptionChanged();
    partial void Ontele_idChanging(System.Nullable<long> value);
    partial void Ontele_idChanged();
    partial void OndesciptionChanging(string value);
    partial void OndesciptionChanged();
    partial void OnmoneyChanging(double value);
    partial void OnmoneyChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onsecretnum12Changing(int value);
    partial void Onsecretnum12Changed();
    partial void Onsecretnum11Changing(int value);
    partial void Onsecretnum11Changed();
    partial void Onsecretnum10Changing(int value);
    partial void Onsecretnum10Changed();
    partial void Onsecretnum9Changing(int value);
    partial void Onsecretnum9Changed();
    partial void Onsecretnum8Changing(int value);
    partial void Onsecretnum8Changed();
    partial void Onsecretnum7Changing(int value);
    partial void Onsecretnum7Changed();
    partial void Onsecretnum6Changing(int value);
    partial void Onsecretnum6Changed();
    partial void Onsecretnum5Changing(int value);
    partial void Onsecretnum5Changed();
    partial void Onsecretnum4Changing(int value);
    partial void Onsecretnum4Changed();
    partial void Onsecretnum3Changing(int value);
    partial void Onsecretnum3Changed();
    partial void Onsecretnum2Changing(int value);
    partial void Onsecretnum2Changed();
    partial void Onsecretnum1Changing(int value);
    partial void Onsecretnum1Changed();
    #endregion
		
		public tbUser()
		{
			this._tbOrders = new EntitySet<tbOrder>(new Action<tbOrder>(this.attach_tbOrders), new Action<tbOrder>(this.detach_tbOrders));
			this._tbTransactions = new EntitySet<tbTransaction>(new Action<tbTransaction>(this.attach_tbTransactions), new Action<tbTransaction>(this.detach_tbTransactions));
			this._tbTransactions1 = new EntitySet<tbTransaction>(new Action<tbTransaction>(this.attach_tbTransactions1), new Action<tbTransaction>(this.detach_tbTransactions1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime NOT NULL")]
		public System.DateTime createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caption", DbType="NVarChar(255)")]
		public string caption
		{
			get
			{
				return this._caption;
			}
			set
			{
				if ((this._caption != value))
				{
					this.OncaptionChanging(value);
					this.SendPropertyChanging();
					this._caption = value;
					this.SendPropertyChanged("caption");
					this.OncaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tele_id", DbType="BigInt")]
		public System.Nullable<long> tele_id
		{
			get
			{
				return this._tele_id;
			}
			set
			{
				if ((this._tele_id != value))
				{
					this.Ontele_idChanging(value);
					this.SendPropertyChanging();
					this._tele_id = value;
					this.SendPropertyChanged("tele_id");
					this.Ontele_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desciption", DbType="NVarChar(1000)")]
		public string desciption
		{
			get
			{
				return this._desciption;
			}
			set
			{
				if ((this._desciption != value))
				{
					this.OndesciptionChanging(value);
					this.SendPropertyChanging();
					this._desciption = value;
					this.SendPropertyChanged("desciption");
					this.OndesciptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_money", DbType="Float NOT NULL")]
		public double money
		{
			get
			{
				return this._money;
			}
			set
			{
				if ((this._money != value))
				{
					this.OnmoneyChanging(value);
					this.SendPropertyChanging();
					this._money = value;
					this.SendPropertyChanged("money");
					this.OnmoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secretnum12", DbType="Int NOT NULL")]
		public int secretnum12
		{
			get
			{
				return this._secretnum12;
			}
			set
			{
				if ((this._secretnum12 != value))
				{
					this.Onsecretnum12Changing(value);
					this.SendPropertyChanging();
					this._secretnum12 = value;
					this.SendPropertyChanged("secretnum12");
					this.Onsecretnum12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secretnum11", DbType="Int NOT NULL")]
		public int secretnum11
		{
			get
			{
				return this._secretnum11;
			}
			set
			{
				if ((this._secretnum11 != value))
				{
					this.Onsecretnum11Changing(value);
					this.SendPropertyChanging();
					this._secretnum11 = value;
					this.SendPropertyChanged("secretnum11");
					this.Onsecretnum11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secretnum10", DbType="Int NOT NULL")]
		public int secretnum10
		{
			get
			{
				return this._secretnum10;
			}
			set
			{
				if ((this._secretnum10 != value))
				{
					this.Onsecretnum10Changing(value);
					this.SendPropertyChanging();
					this._secretnum10 = value;
					this.SendPropertyChanged("secretnum10");
					this.Onsecretnum10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secretnum9", DbType="Int NOT NULL")]
		public int secretnum9
		{
			get
			{
				return this._secretnum9;
			}
			set
			{
				if ((this._secretnum9 != value))
				{
					this.Onsecretnum9Changing(value);
					this.SendPropertyChanging();
					this._secretnum9 = value;
					this.SendPropertyChanged("secretnum9");
					this.Onsecretnum9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secretnum8", DbType="Int NOT NULL")]
		public int secretnum8
		{
			get
			{
				return this._secretnum8;
			}
			set
			{
				if ((this._secretnum8 != value))
				{
					this.Onsecretnum8Changing(value);
					this.SendPropertyChanging();
					this._secretnum8 = value;
					this.SendPropertyChanged("secretnum8");
					this.Onsecretnum8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secretnum7", DbType="Int NOT NULL")]
		public int secretnum7
		{
			get
			{
				return this._secretnum7;
			}
			set
			{
				if ((this._secretnum7 != value))
				{
					this.Onsecretnum7Changing(value);
					this.SendPropertyChanging();
					this._secretnum7 = value;
					this.SendPropertyChanged("secretnum7");
					this.Onsecretnum7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secretnum6", DbType="Int NOT NULL")]
		public int secretnum6
		{
			get
			{
				return this._secretnum6;
			}
			set
			{
				if ((this._secretnum6 != value))
				{
					this.Onsecretnum6Changing(value);
					this.SendPropertyChanging();
					this._secretnum6 = value;
					this.SendPropertyChanged("secretnum6");
					this.Onsecretnum6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secretnum5", DbType="Int NOT NULL")]
		public int secretnum5
		{
			get
			{
				return this._secretnum5;
			}
			set
			{
				if ((this._secretnum5 != value))
				{
					this.Onsecretnum5Changing(value);
					this.SendPropertyChanging();
					this._secretnum5 = value;
					this.SendPropertyChanged("secretnum5");
					this.Onsecretnum5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secretnum4", DbType="Int NOT NULL")]
		public int secretnum4
		{
			get
			{
				return this._secretnum4;
			}
			set
			{
				if ((this._secretnum4 != value))
				{
					this.Onsecretnum4Changing(value);
					this.SendPropertyChanging();
					this._secretnum4 = value;
					this.SendPropertyChanged("secretnum4");
					this.Onsecretnum4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secretnum3", DbType="Int NOT NULL")]
		public int secretnum3
		{
			get
			{
				return this._secretnum3;
			}
			set
			{
				if ((this._secretnum3 != value))
				{
					this.Onsecretnum3Changing(value);
					this.SendPropertyChanging();
					this._secretnum3 = value;
					this.SendPropertyChanged("secretnum3");
					this.Onsecretnum3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secretnum2", DbType="Int NOT NULL")]
		public int secretnum2
		{
			get
			{
				return this._secretnum2;
			}
			set
			{
				if ((this._secretnum2 != value))
				{
					this.Onsecretnum2Changing(value);
					this.SendPropertyChanging();
					this._secretnum2 = value;
					this.SendPropertyChanged("secretnum2");
					this.Onsecretnum2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secretnum1", DbType="Int NOT NULL")]
		public int secretnum1
		{
			get
			{
				return this._secretnum1;
			}
			set
			{
				if ((this._secretnum1 != value))
				{
					this.Onsecretnum1Changing(value);
					this.SendPropertyChanging();
					this._secretnum1 = value;
					this.SendPropertyChanged("secretnum1");
					this.Onsecretnum1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbOrder", Storage="_tbOrders", ThisKey="id", OtherKey="uid")]
		public EntitySet<tbOrder> tbOrders
		{
			get
			{
				return this._tbOrders;
			}
			set
			{
				this._tbOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbTransaction", Storage="_tbTransactions", ThisKey="id", OtherKey="uid")]
		public EntitySet<tbTransaction> tbTransactions
		{
			get
			{
				return this._tbTransactions;
			}
			set
			{
				this._tbTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbTransaction1", Storage="_tbTransactions1", ThisKey="id", OtherKey="from_uid")]
		public EntitySet<tbTransaction> tbTransactions1
		{
			get
			{
				return this._tbTransactions1;
			}
			set
			{
				this._tbTransactions1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbOrders(tbOrder entity)
		{
			this.SendPropertyChanging();
			entity.tbUser = this;
		}
		
		private void detach_tbOrders(tbOrder entity)
		{
			this.SendPropertyChanging();
			entity.tbUser = null;
		}
		
		private void attach_tbTransactions(tbTransaction entity)
		{
			this.SendPropertyChanging();
			entity.tbUser = this;
		}
		
		private void detach_tbTransactions(tbTransaction entity)
		{
			this.SendPropertyChanging();
			entity.tbUser = null;
		}
		
		private void attach_tbTransactions1(tbTransaction entity)
		{
			this.SendPropertyChanging();
			entity.tbUser1 = this;
		}
		
		private void detach_tbTransactions1(tbTransaction entity)
		{
			this.SendPropertyChanging();
			entity.tbUser1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbTransaction")]
	public partial class tbTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _uid;
		
		private System.DateTime _createDate;
		
		private string _transType;
		
		private string _from_uid;
		
		private double _amount;
		
		private string _memo;
		
		private string _status;
		
		private EntityRef<tbUser> _tbUser;
		
		private EntityRef<tbUser> _tbUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnuidChanging(string value);
    partial void OnuidChanged();
    partial void OncreateDateChanging(System.DateTime value);
    partial void OncreateDateChanged();
    partial void OntransTypeChanging(string value);
    partial void OntransTypeChanged();
    partial void Onfrom_uidChanging(string value);
    partial void Onfrom_uidChanged();
    partial void OnamountChanging(double value);
    partial void OnamountChanged();
    partial void OnmemoChanging(string value);
    partial void OnmemoChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public tbTransaction()
		{
			this._tbUser = default(EntityRef<tbUser>);
			this._tbUser1 = default(EntityRef<tbUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="VarChar(50)")]
		public string uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					if (this._tbUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime NOT NULL")]
		public System.DateTime createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string transType
		{
			get
			{
				return this._transType;
			}
			set
			{
				if ((this._transType != value))
				{
					this.OntransTypeChanging(value);
					this.SendPropertyChanging();
					this._transType = value;
					this.SendPropertyChanged("transType");
					this.OntransTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_from_uid", DbType="VarChar(50)")]
		public string from_uid
		{
			get
			{
				return this._from_uid;
			}
			set
			{
				if ((this._from_uid != value))
				{
					if (this._tbUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfrom_uidChanging(value);
					this.SendPropertyChanging();
					this._from_uid = value;
					this.SendPropertyChanged("from_uid");
					this.Onfrom_uidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Float NOT NULL")]
		public double amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memo", DbType="NVarChar(1000)")]
		public string memo
		{
			get
			{
				return this._memo;
			}
			set
			{
				if ((this._memo != value))
				{
					this.OnmemoChanging(value);
					this.SendPropertyChanging();
					this._memo = value;
					this.SendPropertyChanged("memo");
					this.OnmemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbTransaction", Storage="_tbUser", ThisKey="uid", OtherKey="id", IsForeignKey=true)]
		public tbUser tbUser
		{
			get
			{
				return this._tbUser.Entity;
			}
			set
			{
				tbUser previousValue = this._tbUser.Entity;
				if (((previousValue != value) 
							|| (this._tbUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbUser.Entity = null;
						previousValue.tbTransactions.Remove(this);
					}
					this._tbUser.Entity = value;
					if ((value != null))
					{
						value.tbTransactions.Add(this);
						this._uid = value.id;
					}
					else
					{
						this._uid = default(string);
					}
					this.SendPropertyChanged("tbUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbTransaction1", Storage="_tbUser1", ThisKey="from_uid", OtherKey="id", IsForeignKey=true)]
		public tbUser tbUser1
		{
			get
			{
				return this._tbUser1.Entity;
			}
			set
			{
				tbUser previousValue = this._tbUser1.Entity;
				if (((previousValue != value) 
							|| (this._tbUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbUser1.Entity = null;
						previousValue.tbTransactions1.Remove(this);
					}
					this._tbUser1.Entity = value;
					if ((value != null))
					{
						value.tbTransactions1.Add(this);
						this._from_uid = value.id;
					}
					else
					{
						this._from_uid = default(string);
					}
					this.SendPropertyChanged("tbUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
